# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
#

name: build

on:
  push:
    branches: [ main, dev, dev** ]
  pull_request:
    branches: [ main, dev ]

permissions:
  contents: read

jobs:
  build:

    name: Build, test, and lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11-dev", pypy-3.7, pypy-3.9]
        include:
          - os: macos-latest
            python-version: "3.11-dev"
          - os: windows-latest
            python-version: "3.11-dev"
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936 # v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # v4.1.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install .[dev]
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest -p no:smtpd --cov --no-cov-on-fail --cov-fail-under=100

  typing:

    name: Ensure package is typed
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7","3.11-dev"]
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936 # v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # v4.1.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install .[typing]
    - name: Check typing
      run: |
        mypy

  minimum:

    name: Check minimum versions
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.7", "3.11-dev", pypy-3.8, pypy-3.9]
        include:
          - os: macos-latest
            python-version: "3.11-dev"
          - os: windows-latest
            python-version: "3.11-dev"
    timeout-minutes: 5

    steps:
    - uses: actions/checkout@bf085276cecdb0cc76fbbe0687a5a0e786646936 # v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@13ae5bb136fac2878aff31522b9efb785519f984 # v4.1.0
      with:
        python-version: ${{ matrix.python-version }}
        cache: pip
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        pip install .[dev] -r requirements/minimum/requirements.txt
    - name: Test with pytest
      run: |
        pytest -p no:smtpd
